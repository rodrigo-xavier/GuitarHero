classdef Play
    properties (Constant)
        % cores
        R = 1;
        G = 2;
        B = 3;

        % colors configuration
        red_min = 175;
        red_max = 255;
        green_min = 175;
        green_max = 255;
        yellowR_min = 175;
        yellowR_max = 255;
        yellowG_min = 150;
        yellowG_max = 255;
        blueG_min = 125;
        blueG_max = 255;
        blueB_min = 175;
        blueB_max = 255;
        orangeR_min = 175;
        orangeR_max = 255;
        orangeG_min = 95;
        orangeG_max = 255;
    end

    properties (Access = public)
        note_green = false;
        note_red = false;
        note_blue = false;
        note_yellow = false;
        note_orange = false;

        trail_green = false;
        trail_red = false;
        trail_blue = false;
        trail_yellow = false;
        trail_orange = false;

        greenPixel;
        redPixel;
        yellowPixelR;
        yellowPixelG;
        bluePixelG;
        bluePixelB;
        orangePixelR;
        orangePixelG;

        arduino;
        imgO;
    end

    methods
        function arduino = Play(ino)
            play.arduino = ino;
        end

        function imgO = get_pixels(play, video)
            play.imgO = getdata(video,1,'uint8');

            play.greenPixel = play.imgO(312,230,play.G);
            play.redPixel = play.imgO(311,274,play.R);
            play.yellowPixelR = play.imgO(312,311,play.R);
            play.yellowPixelG = play.imgO(312,311,play.G);
            play.bluePixelG = play.imgO(312,354,play.G);
            play.bluePixelB = play.imgO(312,354,play.B);
            play.orangePixelR = play.imgO(311,395,play.R);
            play.orangePixelG = play.imgO(311,395,play.G);
        end

        function set_up(play)
            %detect green
            if ((play.greenPixel >= play.green_min) && (play.greenPixel <= play.green_max))
                find_trail_green();
                play.note_green = true;
            end

            %detect red
            if ((play.redPixel >= play.red_min) && (play.redPixel <= play.red_max))
                find_trail_red();
                play.note_red = true;
            end

            %detect yellow
            if ((play.yellowPixelR >= play.yellowR_min) && (play.yellowPixelR <= play.yellowR_max) && ...
                (play.yellowPixelG >= play.yellowG_min) && (play.yellowPixelG <= play.yellowG_max))
                find_trail_yellow();
                play.note_yellow = true;
            end

            %detect blue
            if ((play.bluePixelG >= play.blueG_min) && (play.bluePixelG <= play.blueG_max) && ...
                (play.bluePixelB >= play.blueB_min) && (play.bluePixelB <= play.blueB_max))
                find_trail_blue();
                play.note_blue = true;
            end

            %detect orange
            if ((play.orangePixelR >= play.orangeR_min) && (play.orangePixelR <= play.orangeR_max) && ...
                (play.orangePixelG >= play.orangeG_min) && (play.orangePixelG <= play.orangeG_max))
                find_trail_orange();
                play.note_orange = true;
            end
        end
        
        function find_trail_green()
            if ((play.imgO(293,238,G) >= play.green_min) && (play.imgO(293,238,G) <= play.green_max) && ...
                (play.imgO(292,238,G) >= play.green_min) && (play.imgO(292,238,G) <= play.green_max) && ...
                (play.imgO(291,239,G) >= play.green_min) && (play.imgO(291,239,G) <= play.green_max) && ...
                (play.imgO(290,239,G) >= play.green_min) && (play.imgO(290,239,G) <= play.green_max) && ...
                (play.imgO(289,239,G) >= play.green_min) && (play.imgO(289,239,G) <= play.green_max) && ...
                (play.imgO(288,240,G) >= play.green_min) && (play.imgO(288,240,G) <= play.green_max) && ...
                (play.imgO(287,240,G) >= play.green_min) && (play.imgO(287,240,G) <= play.green_max) && ...
                (play.imgO(286,240,G) >= play.green_min) && (play.imgO(286,240,G) <= play.green_max) && ...
                (play.imgO(285,241,G) >= play.green_min) && (play.imgO(285,241,G) <= play.green_max) && ...
                (play.imgO(284,241,G) >= play.green_min) && (play.imgO(284,241,G) <= play.green_max) && ...
                (play.imgO(283,241,G) >= play.green_min) && (play.imgO(283,241,G) <= play.green_max) && ...
                (play.imgO(282,242,G) >= play.green_min) && (play.imgO(282,242,G) <= play.green_max) && ...
                (play.imgO(281,243,G) >= play.green_min) && (play.imgO(281,243,G) <= play.green_max))
                send_command(play.arduino, "0000010000000000");
                play.trail_green = true;
            end
        end

        function find_trail_red()
            if ((play.imgO(293,275,R) >= play.red_min) && (play.imgO(293,275,R) <= play.red_max) && ...
                (play.imgO(292,275,R) >= play.red_min) && (play.imgO(292,275,R) <= play.red_max) && ...
                (play.imgO(291,275,R) >= play.red_min) && (play.imgO(291,275,R) <= play.red_max) && ...
                (play.imgO(290,276,R) >= play.red_min) && (play.imgO(290,276,R) <= play.red_max) && ...
                (play.imgO(289,276,R) >= play.red_min) && (play.imgO(289,276,R) <= play.red_max) && ...
                (play.imgO(288,276,R) >= play.red_min) && (play.imgO(288,276,R) <= play.red_max) && ...
                (play.imgO(287,276,R) >= play.red_min) && (play.imgO(287,276,R) <= play.red_max) && ...
                (play.imgO(286,276,R) >= play.red_min) && (play.imgO(286,276,R) <= play.red_max) && ...
                (play.imgO(285,277,R) >= play.red_min) && (play.imgO(285,277,R) <= play.red_max) && ...
                (play.imgO(284,277,R) >= play.red_min) && (play.imgO(284,277,R) <= play.red_max) && ...
                (play.imgO(283,277,R) >= play.red_min) && (play.imgO(283,277,R) <= play.red_max) && ...
                (play.imgO(282,277,R) >= play.red_min) && (play.imgO(282,277,R) <= play.red_max) && ...
                (play.imgO(281,278,R) >= play.red_min) && (play.imgO(281,278,R) <= play.red_max))
                send_command(play.arduino, "0000001000000000");
                play.trail_red = true;
            end
        end

        function find_trail_yellow()
            if ((play.imgO(293,312,R) >= play.yellowR_min) && (play.imgO(293,312,R) <= play.yellowR_max) && ...
                (play.imgO(293,312,G) >= play.yellowG_min) && (play.imgO(293,312,G) <= play.yellowG_max) && ...
                (play.imgO(292,312,R) >= play.yellowR_min) && (play.imgO(292,312,R) <= play.yellowR_max) && ...
                (play.imgO(292,312,G) >= play.yellowG_min) && (play.imgO(292,312,G) <= play.yellowG_max) && ...
                (play.imgO(291,312,R) >= play.yellowR_min) && (play.imgO(291,312,R) <= play.yellowR_max) && ...
                (play.imgO(291,312,G) >= play.yellowG_min) && (play.imgO(291,312,G) <= play.yellowG_max) && ...
                (play.imgO(290,312,R) >= play.yellowR_min) && (play.imgO(290,312,R) <= play.yellowR_max) && ...
                (play.imgO(290,312,G) >= play.yellowG_min) && (play.imgO(290,312,G) <= play.yellowG_max) && ...
                (play.imgO(289,312,R) >= play.yellowR_min) && (play.imgO(289,312,R) <= play.yellowR_max) && ...
                (play.imgO(289,312,G) >= play.yellowG_min) && (play.imgO(289,312,G) <= play.yellowG_max) && ...
                (play.imgO(288,312,R) >= play.yellowR_min) && (play.imgO(288,312,R) <= play.yellowR_max) && ...
                (play.imgO(288,312,G) >= play.yellowG_min) && (play.imgO(288,312,G) <= play.yellowG_max) && ...
                (play.imgO(287,312,R) >= play.yellowR_min) && (play.imgO(287,312,R) <= play.yellowR_max) && ...
                (play.imgO(287,312,G) >= play.yellowG_min) && (play.imgO(287,312,G) <= play.yellowG_max) && ...
                (play.imgO(286,312,R) >= play.yellowR_min) && (play.imgO(286,312,R) <= play.yellowR_max) && ...
                (play.imgO(286,312,G) >= play.yellowG_min) && (play.imgO(286,312,G) <= play.yellowG_max) && ...
                (play.imgO(285,312,R) >= play.yellowR_min) && (play.imgO(285,312,R) <= play.yellowR_max) && ...
                (play.imgO(285,312,G) >= play.yellowG_min) && (play.imgO(285,312,G) <= play.yellowG_max) && ...
                (play.imgO(284,312,R) >= play.yellowR_min) && (play.imgO(284,312,R) <= play.yellowR_max) && ...
                (play.imgO(284,312,G) >= play.yellowG_min) && (play.imgO(284,312,G) <= play.yellowG_max) && ...
                (play.imgO(283,312,R) >= play.yellowR_min) && (play.imgO(283,312,R) <= play.yellowR_max) && ...
                (play.imgO(283,312,G) >= play.yellowG_min) && (play.imgO(283,312,G) <= play.yellowG_max) && ...
                (play.imgO(282,312,R) >= play.yellowR_min) && (play.imgO(282,312,R) <= play.yellowR_max) && ...
                (play.imgO(282,312,G) >= play.yellowG_min) && (play.imgO(282,312,G) <= play.yellowG_max) && ...
                (play.imgO(281,312,R) >= play.yellowR_min) && (play.imgO(281,312,R) <= play.yellowR_max) && ...
                (play.imgO(281,312,G) >= play.yellowG_min) && (play.imgO(281,312,G) <= play.yellowG_max))
                send_command(play.arduino, "0000000100000000");
                play.trail_yellow = true;
            end
        end

        function find_trail_blue()
            if ((play.imgO(291,349,B) >= play.blueB_min) && (play.imgO(291,349,B) <= play.blueB_max) && ...
                (play.imgO(291,349,G) >= play.blueG_min) && (play.imgO(291,349,G) <= play.blueG_max) && ...
                (play.imgO(290,349,B) >= play.blueB_min) && (play.imgO(290,349,B) <= play.blueB_max) && ...
                (play.imgO(290,349,G) >= play.blueG_min) && (play.imgO(290,349,G) <= play.blueG_max) && ...
                (play.imgO(289,349,B) >= play.blueB_min) && (play.imgO(289,349,B) <= play.blueB_max) && ...
                (play.imgO(289,349,G) >= play.blueG_min) && (play.imgO(289,349,G) <= play.blueG_max) && ...
                (play.imgO(288,349,B) >= play.blueB_min) && (play.imgO(288,349,B) <= play.blueB_max) && ...
                (play.imgO(288,349,G) >= play.blueG_min) && (play.imgO(288,349,G) <= play.blueG_max) && ...
                (play.imgO(287,349,B) >= play.blueB_min) && (play.imgO(287,349,B) <= play.blueB_max) && ...
                (play.imgO(287,349,G) >= play.blueG_min) && (play.imgO(287,349,G) <= play.blueG_max) && ...
                (play.imgO(286,349,B) >= play.blueB_min) && (play.imgO(286,349,B) <= play.blueB_max) && ...
                (play.imgO(286,349,G) >= play.blueG_min) && (play.imgO(286,349,G) <= play.blueG_max) && ...
                (play.imgO(285,348,B) >= play.blueB_min) && (play.imgO(285,348,B) <= play.blueB_max) && ...
                (play.imgO(285,348,G) >= play.blueG_min) && (play.imgO(285,348,G) <= play.blueG_max) && ...
                (play.imgO(284,348,B) >= play.blueB_min) && (play.imgO(284,348,B) <= play.blueB_max) && ...
                (play.imgO(284,348,G) >= play.blueG_min) && (play.imgO(284,348,G) <= play.blueG_max) && ...
                (play.imgO(283,348,B) >= play.blueB_min) && (play.imgO(283,348,B) <= play.blueB_max) && ...
                (play.imgO(283,348,G) >= play.blueG_min) && (play.imgO(283,348,G) <= play.blueG_max) && ...
                (play.imgO(282,348,B) >= play.blueB_min) && (play.imgO(282,348,B) <= play.blueB_max) && ...
                (play.imgO(282,348,G) >= play.blueG_min) && (play.imgO(282,348,G) <= play.blueG_max) && ...
                (play.imgO(281,348,B) >= play.blueB_min) && (play.imgO(281,348,B) <= play.blueB_max) && ...
                (play.imgO(281,348,G) >= play.blueG_min) && (play.imgO(281,348,G) <= play.blueG_max) && ...
                (play.imgO(280,348,B) >= play.blueB_min) && (play.imgO(280,348,B) <= play.blueB_max) && ...
                (play.imgO(280,348,G) >= play.blueG_min) && (play.imgO(280,348,G) <= play.blueG_max) && ...
                (play.imgO(279,348,B) >= play.blueB_min) && (play.imgO(279,348,B) <= play.blueB_max) && ...
                (play.imgO(279,348,G) >= play.blueG_min) && (play.imgO(279,348,G) <= play.blueG_max))
                send_command(play.arduino, "0000000010000000");
                play.trail_blue = true;
            end
        end

        function find_trail_orange()
            if ((play.imgO(294,387,R) >= play.orangeR_min) && (play.imgO(294,387,G) <= play.orangeR_max) && ...
                (play.imgO(294,387,G) >= play.orangeG_min) && (play.imgO(294,387,G) <= play.orangeG_max) && ...
                (play.imgO(293,387,R) >= play.orangeR_min) && (play.imgO(293,387,R) <= play.orangeR_max) && ...
                (play.imgO(293,387,G) >= play.orangeG_min) && (play.imgO(293,387,G) <= play.orangeG_max) && ...
                (play.imgO(292,386,R) >= play.orangeR_min) && (play.imgO(292,386,R) <= play.orangeR_max) && ...
                (play.imgO(292,386,G) >= play.orangeG_min) && (play.imgO(292,386,G) <= play.orangeG_max) && ...
                (play.imgO(291,386,R) >= play.orangeR_min) && (play.imgO(291,386,R) <= play.orangeR_max) && ...
                (play.imgO(291,386,G) >= play.orangeG_min) && (play.imgO(291,386,G) <= play.orangeG_max) && ...
                (play.imgO(290,386,R) >= play.orangeR_min) && (play.imgO(290,386,R) <= play.orangeR_max) && ...
                (play.imgO(290,386,G) >= play.orangeG_min) && (play.imgO(290,386,G) <= play.orangeG_max) && ...
                (play.imgO(289,385,R) >= play.orangeR_min) && (play.imgO(289,385,R) <= play.orangeR_max) && ...
                (play.imgO(289,385,G) >= play.orangeG_min) && (play.imgO(289,385,G) <= play.orangeG_max) && ...
                (play.imgO(288,385,R) >= play.orangeR_min) && (play.imgO(288,385,R) <= play.orangeR_max) && ...
                (play.imgO(288,385,G) >= play.orangeG_min) && (play.imgO(288,385,G) <= play.orangeG_max) && ...
                (play.imgO(287,385,R) >= play.orangeR_min) && (play.imgO(287,385,R) <= play.orangeR_max) && ...
                (play.imgO(287,385,G) >= play.orangeG_min) && (play.imgO(287,385,G) <= play.orangeG_max) && ...
                (play.imgO(286,384,R) >= play.orangeR_min) && (play.imgO(286,384,R) <= play.orangeR_max) && ...
                (play.imgO(286,384,G) >= play.orangeG_min) && (play.imgO(286,384,G) <= play.orangeG_max) && ...
                (play.imgO(285,384,R) >= play.orangeR_min) && (play.imgO(285,384,R) <= play.orangeR_max) && ...
                (play.imgO(285,384,G) >= play.orangeG_min) && (play.imgO(285,384,G) <= play.orangeG_max) && ...
                (play.imgO(284,384,R) >= play.orangeR_min) && (play.imgO(284,384,R) <= play.orangeR_max) && ...
                (play.imgO(284,384,G) >= play.orangeG_min) && (play.imgO(284,384,G) <= play.orangeG_max) && ...
                (play.imgO(283,383,R) >= play.orangeR_min) && (play.imgO(283,383,R) <= play.orangeR_max) && ...
                (play.imgO(283,383,G) >= play.orangeG_min) && (play.imgO(283,383,G) <= play.orangeG_max) && ...
                (play.imgO(282,382,R) >= play.orangeR_min) && (play.imgO(282,382,R) <= play.orangeR_max) && ...
                (play.imgO(282,382,G) >= play.orangeG_min) && (play.imgO(282,382,G) <= play.orangeG_max))
                send_command(play.arduino, "0000000001000000");
                play.trail_orange = true;
            end
        end

        function tear_down(play)
            %detect green
            if ((note_green) && ...
                ~((play.greenPixel >= play.green_min) && (play.greenPixel <= play.green_max)))
                send_command(play.arduino, "1000000000000000");
                play.note_green = false;
            elseif ((trail_green) && ...
                ~((play.greenPixel >= play.green_min) && (play.greenPixel <= play.green_max)))
                send_command(play.arduino, "0000010000000000");
                play.trail_green = false;
            end

            %detect red   
            if ((note_red) && ...
                ~((play.redPixel >= play.red_min) && (play.redPixel <= play.red_max)))
                send_command(play.arduino, "0100000000000000");
                play.note_red = false;
            elseif ((trail_red) && ...
                ~((play.redPixel >= play.red_min) && (play.redPixel <= play.red_max)))
                send_command(play.arduino, "0000001000000000");
                play.trail_red = false;
            end

            %detect yellow
            if ((note_yellow) && ...
                ~((play.yellowPixelR >= play.yellowR_min) && (play.yellowPixelR <= play.yellowR_max) && ...
                (play.yellowPixelG >= play.yellowG_min) && (play.yellowPixelG <= play.yellowG_max)))
                send_command(play.arduino, "0010000000000000");
                play.note_yellow = false;
            elseif ((trail_yellow) && ...
                ~((play.yellowPixelR >= play.yellowR_min) && (play.yellowPixelR <= play.yellowR_max) && ...
                (play.yellowPixelG >= play.yellowG_min) && (play.yellowPixelG <= play.yellowG_max)))
                send_command(play.arduino, "0000000100000000");
                play.trail_yellow = false;
            end

            %detect blue
            if ((note_blue) && ...
                ~((play.bluePixelG >= play.blueG_min) && (play.bluePixelG <= play.blueG_max) && ...
                (play.bluePixelB >= play.blueB_min) && (play.bluePixelB <= play.blueB_max)))
                send_command(play.arduino, "0001000000000000");
                play.note_blue = false;
            elseif ((trail_blue) && ...
                ~((play.bluePixelG >= play.blueG_min) && (play.bluePixelG <= play.blueG_max) && ...
                (play.bluePixelB >= play.blueB_min) && (play.bluePixelB <= play.blueB_max)))
                send_command(play.arduino, "0000000010000000");
                play.trail_blue = false;
            end

            %detect orange
            if ((note_orange) && ...
                ~((play.orangePixelR >= play.orangeR_min) && (play.orangePixelR <= play.orangeR_max) && ...
                (play.orangePixelG >= play.orangeG_min) && (play.orangePixelG <= play.orangeG_max)))
                send_command(play.arduino, "0000100000000000");
                play.note_orange = false;
            elseif ((trail_orange) && ...
                ~((play.orangePixelR >= play.orangeR_min) && (play.orangePixelR <= play.orangeR_max) && ...
                (play.orangePixelG >= play.orangeG_min) && (play.orangePixelG <= play.orangeG_max)))
                send_command(play.arduino, "0000000001000000");
                play.trail_orange = false;
            end
        end
        % function img = get_imgO(y, x, color)
        %     img = play.imgO(y, x, color);
        % end
    end
end